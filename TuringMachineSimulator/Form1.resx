<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="codeTextBox.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="logTextBox.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>